// This file has been autogenerated from a class added in the UI designer.

using System;
using Foundation;
using Greeter.Cells;
using Greeter.Sources;
using UIKit;

namespace Greeter.Storyboards
{
    public partial class AddIssueViewController : UIViewController, IUITextViewDelegate
    {
        public AddIssueViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            tvIssueDetail.Delegate = this;

            Initialise();

            //   tvIssueDetail.EndEditing += delegate {
            //       return true;
            //};

            //tvIssueDetail.ShouldChangeText += delegate
            //{
            //    Debug.WriteLine("Chnged Text : " + tvIssueDetail.Text);
            //    return true;
            //};

            //tvIssueDetail.ShouldChangeTextInRange = (range, replacementText) =>
            //{
            //    return true;
            //};

            //mobNoTxtField.ShouldChangeCharacters = (textField, range, replacementString) =>
            //{
            //    var newLength = textField.Text.Length + replacementString.Length - range.Length;
            //    return newLength <= 14;
            //};

            //Clicks
            btnCancel.TouchUpInside += (s, e) => DismissViewController(true, null);
            btnSave.TouchUpInside += BtnSave_TouchUpInside;
        }

        void Initialise()
        {
            ShowOrHideHint(tvIssueDetail.Text.Length, lblIssueDetailHint);

            cvImages.RegisterNibForCell(ImageCell.Nib, ImageCell.Key);
            cvImages.Source = new ImagesSource();
        }

        void ShowOrHideHint(int len, UILabel lbl)
        {
            //if (String.IsNullOrEmpty(enteredText))
            //{
            //    lbl.Hidden = false;
            //}
            //else
            //{
            //    lbl.Hidden = true;
            //}

            lbl.Hidden = len == 0 ? false : true;
        }

        private void BtnSave_TouchUpInside(object sender, EventArgs e)
        {

        }

        [Export("textView:shouldChangeTextInRange:replacementText:")]
        public bool ShouldChangeText(UITextView textView, NSRange range, string text)
        {
            int len = textView.Text.Length + text.Length - (int)range.Length;
            ShowOrHideHint(len, lblIssueDetailHint);
            return true;
        }

        //[Export("didChange:valuesAtIndexes:forKey:")]
        //public void DidChange(NSKeyValueChange changeKind, NSIndexSet indexes, NSString forKey)
        //{
        //    Debug.WriteLine("Chnged Text : " + tvIssueDetail.Text);
        //}

        //[Export("didChangeValueForKey:withSetMutation:usingObjects:")]
        //public void DidChange(NSString forKey, NSKeyValueSetMutationKind mutationKind, NSSet objects)
        //{
        //    Debug.WriteLine("Chnged Text : " + tvIssueDetail.Text);
        //}

        //[Export("didChangeValueForKey:")]
        //public void DidChangeValue(string forKey)
        //{
        //    Debug.WriteLine("Chnged Text : " + tvIssueDetail.Text);
        //}
    }
}
