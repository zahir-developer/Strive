// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Diagnostics;
using System.Threading.Tasks;
using Foundation;
using Greeter.Common;
using Greeter.DTOs;
using Greeter.Extensions;
using Greeter.Services.Api;
using Greeter.Services.Network;
using UIKit;

namespace Greeter.Storyboards
{
    public partial class EmailViewController : BaseViewController, IUIPickerViewDelegate, IUIPickerViewDataSource
    {
        // Data
        const string SCREEN_TITLE = "Email Receipt";
        public string[] data = new string[] {
            "Main Street 1",
            "Main Street 2",
            "Main Street 3"
        };

        public string Make;
        public string Model;
        public string Color;
        public string CustName;
        public CreateServiceRequest Service;

        //Views
        UIPickerView pv = new UIPickerView();

        public EmailViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Initialise();


#if DEBUG
            tfCust.Text = "karthiknever16@gmail.com";
#endif

            //Clicks
            btnCustomerSend.TouchUpInside += delegate
            {
                if (tfCust.Text.IsEmpty())
                {
                    ShowAlertMsg(Common.Messages.EMAIL_MISSING);
                    return;
                }

                _ = SendToCustomer(tfCust.Text);
            };

            btnPrint.TouchUpInside += delegate
            {
                //TODO : 
            };

            btnPay.TouchUpInside += delegate
            {
                NavigateToPayScreen();
            };
        }

        async Task SendToCustomer(string email)
        {
            if (!email.IsEmail())
            {
                ShowAlertMsg(Common.Messages.EMAIL_WARNING);
                return;
            }

            ShowActivityIndicator();

            var subject = "Wash Receipt";
            var body = "Ticket Number : " + Service.Job.JobId + "\n\n";

            if (Service.Job.ClientId != 0)
            {
                body += "Client Details : " + "\n"
                    + "Client Name - " + CustName + "\n\n";
            }

            body += "Vehicle Details : " + "\n" +
                 "Make - " + Make + "\n" +
                "Model - " + Model + "\n" +
                 "Color - " + Color + "\n\n" +
                 "Services : " + "\n";

            var totalAmt = 0f;
            for (int i = 0; i < Service.JobItems.Count; i++)
            {
                var job = Service.JobItems[i];
                body += job.JobId + " - " + job.Price + "\n";
                totalAmt += job.Price;
            }

            body += "Total Amount : " + totalAmt.ToString();
            Debug.WriteLine("Email Body :" + body);

            var response = await new WashApi().SendEmail(email, subject, body);
            if (response.IsNoInternet())
            {
                ShowAlertMsg(response.Message);
                return;
            }

            if (response.IsSuccess())
            {
                ShowAlertMsg(Common.Messages.EMAIL_SENT_MSG);
            }

            HideActivityIndicator();
        }

        void Initialise()
        {
            Title = SCREEN_TITLE;

            tfEmp.AddLeftPadding(UIConstants.TEXT_FIELD_HORIZONTAL_PADDING);
            tfEmp.AddRightPadding(UIConstants.TEXT_FIELD_RIGHT_BUTTON_PADDING);

            tfCust.AddLeftPadding(UIConstants.TEXT_FIELD_HORIZONTAL_PADDING);
            tfCust.AddRightPadding(UIConstants.TEXT_FIELD_RIGHT_BUTTON_PADDING);

            AddPickerToolbar(tfEmp, tfEmp.Placeholder, PickerDone);
            tfEmp.InputView = pv;

            pv.DataSource = this;
            pv.Delegate = this;
        }

        void PickerDone()
        {
            int pos = (int)pv.SelectedRowInComponent(0);
            tfEmp.Text = data[pos];
        }

        void NavigateToPayScreen()
        {
            UIViewController vc = GetViewController(GetHomeStorybpard(), nameof(PaymentSucessViewController));
            NavigateToWithAnim(vc);
        }

        public nint GetComponentCount(UIPickerView pickerView)
        {
            return 1;
        }

        public nint GetRowsInComponent(UIPickerView pickerView, nint component)
        {
            return data.Length;
        }

        [Export("pickerView:didSelectRow:inComponent:")]
        public void Selected(UIPickerView pickerView, nint row, nint component)
        {

        }

        [Export("pickerView:titleForRow:forComponent:")]
        public string GetTitle(UIPickerView pickerView, nint row, nint component)
        {
            return data[row];
        }
    }
}
